@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Text;
@using Sandbox.UI;
@using System.Threading.Tasks;
@using Sandbox;
@using Roleplay.Models;
@using Roleplay.Systems;

@attribute [StyleSheet]
@namespace Roleplay.UI

<root>
	<div class="subpage-header">
		<div>Tasks List</div>
	</div>
	@if (IsOwner)
	{
		<div class="business-tasks-admin-navbar">
			<button onclick="@(() => Navigator.Navigate("/business/tasks/create?id="+ this.Id))">Create</button>
		</div>
	}
	<div class="subpage-content">
		@foreach (Models.Task task in ThisTasks)
		{
			<div class="list-item" onclick="@(() => Navigator.Navigate("/business/tasks/details?id="+this.Id+"&taskId="+task.Id))">@task.Description</div>
		}
	</div>
</root>

@code {
	public NavHostPanel Navigator;

	public bool IsOwner => Database.Current.GetPersonBySteamId(Game.LocalClient.SteamId).IsOwnerOf(ThisBusiness.Id);

	public Business ThisBusiness => Database.Current.GetTableById<Business>(Guid.Parse(this.Id));

	public List<Models.Task> ThisTasks => ThisBusiness.ListLinkedTo<Models.Task>().ConvertTo<Models.Task>();

	public BusinessIdTasksPanel()
	{
		Log.Info(this.Id);
	}

	public override void OnParentChanged()
	{
		base.OnParentChanged();

		Navigator = Ancestors.OfType<NavHostPanel>().FirstOrDefault();
	}


	protected override int BuildHash()
	{
		return HashCode.Combine(ThisBusiness, ThisTasks.Count);
	}
}
