@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Text;
@using Sandbox.UI;
@using System.Threading.Tasks;
@using Sandbox;
@using Roleplay.Models;
@using Roleplay.Systems;

@attribute [StyleSheet]
@namespace Roleplay.UI

<root>
	<div class="subpage-header">
		<div>Jobs List</div>
	</div>
	@if (IsOwner)
	{
		<div class="business-jobs-admin-navbar">
			<button>Create</button>
		</div>
	}
	<div class="subpage-content">
		@foreach (Job job in ThisJobs)
		{
			<div onclick="@(() => Navigator.Navigate("/business/jobs/detail?id="+this.Id+"&jobId="+job.Id))">@job.Name</div>
		}
	</div>
</root>

@code {
	public NavHostPanel Navigator;

	public bool IsOwner => Database.Current.GetPersonBySteamId(Game.LocalClient.SteamId).IsOwnerOf(ThisBusiness.Id);

	public Business ThisBusiness => Database.Current.GetTableById<Business>(Guid.Parse(this.Id));

	public List<Job> ThisJobs => ThisBusiness.ListLinkedTo<Job>().ConvertTo<Job>();

	public BusinessIdJobsPanel()
	{
		Log.Info(this.Id);
	}

	public override void OnParentChanged()
	{
		base.OnParentChanged();

		Navigator = Ancestors.OfType<NavHostPanel>().FirstOrDefault();
	}


	protected override int BuildHash()
	{
		return HashCode.Combine(ThisBusiness);
	}
}
